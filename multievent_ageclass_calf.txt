model
{
    for (i in 1:n_ind) {
        for (t in 1:(n_occ - 1)) {
            logit(pA[i, t]) <- alpha1[pod[i]] + epsilon_p[pod[i], 
                t]
            logit(phiA[i, t]) <- beta1[pod[i]] + epsilon_phi[pod[i], 
                t]
            logit(pPA[i, t]) <- alpha2[pod[i]] + epsilon_p[pod[i], 
                t]
            logit(phiPA[i, t]) <- beta2[pod[i]] + epsilon_phi[pod[i], 
                t]
            logit(pC[i, t]) <- alpha3[pod[i]] + epsilon_p[pod[i], 
                t]
            logit(phiC[i, t]) <- beta3[pod[i]] + epsilon_phi[pod[i], 
                t]
            logit(psiPAA[i, t]) <- gamma1[pod[i]] + epsilon_psi[pod[i], 
                t]
            logit(psiCPA[i, t]) <- gamma2[pod[i]] + epsilon_psi[pod[i], 
                t]
        }
    }
    for (t in 1:(n_occ - 1)) {
        for (j in 1:2) {
            logit(pA.est[j, t]) <- alpha1[j] + epsilon_p[j, t]
            logit(phiA.est[j, t]) <- beta1[j] + epsilon_phi[j, 
                t]
            logit(pPA.est[j, t]) <- alpha2[j] + epsilon_p[j, 
                t]
            logit(phiPA.est[j, t]) <- beta2[j] + epsilon_phi[j, 
                t]
            logit(pC.est[j, t]) <- alpha3[j] + epsilon_p[j, t]
            logit(phiC.est[j, t]) <- beta3[j] + epsilon_phi[j, 
                t]
            logit(psiPAA.est[j, t]) <- gamma1[j] + epsilon_psi[j, 
                t]
            logit(psiCPA.est[j, t]) <- gamma2[j] + epsilon_psi[j, 
                t]
        }
    }
    for (i in 1:n_doubtful) {
        for (t in (f[i] + 1):n_occ) {
            Doubtful_C[i, t] <- equals(z[i, t], 1)
            Doubtful_PA[i, t] <- equals(z[i, t], 2)
            Doubtful_A[i, t] <- equals(z[i, t], 3)
        }
    }
    for (i in (n_doubtful + 1):n_ind) {
        for (t in (f[i] + 1):n_occ) {
            Dusky_C[i, t] <- equals(z[i, t], 1)
            Dusky_PA[i, t] <- equals(z[i, t], 2)
            Dusky_A[i, t] <- equals(z[i, t], 3)
        }
    }
    ps.init[1] <- piC
    ps.init[2] <- (1 - piC)/2
    ps.init[3] <- (1 - piC)/2
    ps.init[4] <- 0.00000E+00
    for (i in 1:n_ind) {
        po.init[1, i, 1] <- 0.00000E+00
        po.init[1, i, 2] <- 1
        po.init[1, i, 3] <- 0.00000E+00
        po.init[1, i, 4] <- 0.00000E+00
        po.init[2, i, 1] <- 0.00000E+00
        po.init[2, i, 2] <- 0.00000E+00
        po.init[2, i, 3] <- 1
        po.init[2, i, 4] <- 0.00000E+00
        po.init[3, i, 1] <- 0.00000E+00
        po.init[3, i, 2] <- 0.00000E+00
        po.init[3, i, 3] <- 0.00000E+00
        po.init[3, i, 4] <- 1
        po.init[4, i, 1] <- 1
        po.init[4, i, 2] <- 0.00000E+00
        po.init[4, i, 3] <- 0.00000E+00
        po.init[4, i, 4] <- 0.00000E+00
        for (t in 1:(n_occ - 1)) {
            po[1, i, t, 1] <- 1 - (pC[i, t] * eff[pod[i], t + 
                1])
            po[1, i, t, 2] <- pC[i, t] * eff[pod[i], t + 1]
            po[1, i, t, 3] <- 0.00000E+00
            po[1, i, t, 4] <- 0.00000E+00
            po[2, i, t, 1] <- 1 - (pPA[i, t] * eff[pod[i], t + 
                1])
            po[2, i, t, 2] <- 0.00000E+00
            po[2, i, t, 3] <- pPA[i, t] * eff[pod[i], t + 1]
            po[2, i, t, 4] <- 0.00000E+00
            po[3, i, t, 1] <- 1 - (pA[i, t] * eff[pod[i], t + 
                1])
            po[3, i, t, 2] <- 0.00000E+00
            po[3, i, t, 3] <- 0.00000E+00
            po[3, i, t, 4] <- pA[i, t] * eff[pod[i], t + 1]
            po[4, i, t, 1] <- 1
            po[4, i, t, 2] <- 0.00000E+00
            po[4, i, t, 3] <- 0.00000E+00
            po[4, i, t, 4] <- 0.00000E+00
            ps[1, i, t, 1] <- phiC[i, t] * (1 - psiCPA[i, t])
            ps[1, i, t, 2] <- phiC[i, t] * psiCPA[i, t]
            ps[1, i, t, 3] <- 0.00000E+00
            ps[1, i, t, 4] <- 1 - phiC[i, t]
            ps[2, i, t, 1] <- 0.00000E+00
            ps[2, i, t, 2] <- phiPA[i, t] * (1 - psiPAA[i, t])
            ps[2, i, t, 3] <- phiPA[i, t] * psiPAA[i, t]
            ps[2, i, t, 4] <- 1 - phiPA[i, t]
            ps[3, i, t, 1] <- 0.00000E+00
            ps[3, i, t, 2] <- 0.00000E+00
            ps[3, i, t, 3] <- phiA[i, t]
            ps[3, i, t, 4] <- 1 - phiA[i, t]
            ps[4, i, t, 1] <- 0.00000E+00
            ps[4, i, t, 2] <- 0.00000E+00
            ps[4, i, t, 3] <- 0.00000E+00
            ps[4, i, t, 4] <- 1
        }
    }
    for (i in 1:n_ind) {
        z[i, f[i]] ~ dcat(ps.init[1:4])
        y[i, f[i]] ~ dcat(po.init[z[i, f[i]], i, 1:4])
        for (t in (f[i] + 1):n_occ) {
            z[i, t] ~ dcat(ps[z[i, t - 1], i, t - 1, 1:4])
            y[i, t] ~ dcat(po[z[i, t], i, t - 1, 1:4])
        }
    }
    piC ~ dunif(0.00000E+00, 1)
    for (j in 1:2) {
        for (t in 1:(n_occ - 1)) {
            epsilon_p[j, t] ~ dnorm(0.00000E+00, tau[1])
            epsilon_phi[j, t] ~ dnorm(0.00000E+00, tau[2])
            epsilon_psi[j, t] ~ dnorm(0.00000E+00, tau[3])
        }
    }
    for (j in 1:2) {
        gamma1[j] ~ dt(0.00000E+00, 1, 3)
        gamma2[j] ~ dt(0.00000E+00, 1, 3)
        beta1[j] ~ dt(0.00000E+00, 1, 3)
        alpha1[j] ~ dt(0.00000E+00, 1, 3)
        beta2[j] ~ dt(0.00000E+00, 1, 3)
        alpha2[j] ~ dt(0.00000E+00, 1, 3)
        beta3[j] ~ dt(0.00000E+00, 1, 3)
        alpha3[j] ~ dt(0.00000E+00, 1, 3)
    }
    for (u in 1:3) {
        tau[u] ~ dscaled.gamma(1, 3)
        sigma[u] <- 1/sqrt(tau[u])
        sigma2[u] <- pow(sigma[u], 2)
    }
}
